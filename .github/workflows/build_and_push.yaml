name: Deploy to Staging

env:
  APP_NAME: vmms-backend
  GHCR_REPOSITORY: vmms-backend

on:
  push:
    branches:
      - main

jobs:
  build_and_publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Prepare environment variables
        run: |
          APP_NAME_SANITIZED=$(echo "${{ env.APP_NAME }}" | tr ':' '-')
          IMAGE_TAG="$(date '+%H%M%S-%d-%m-%Y')"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "APP_NAME_SANITIZED=$APP_NAME_SANITIZED" >> $GITHUB_ENV

      - name: Build and push the image to ghcr
        run: |
          docker login --username GITHUBUSERNAME --password ${{ secrets.GH_PAT }} ghcr.io
          docker build --no-cache -f ./docker/prod.Dockerfile -t $GHCR_REPOSITORY:$IMAGE_TAG --tag ghcr.io/dave-mash/vmms-backend:latest .
          docker push ghcr.io/dave-mash/vmms-backend:latest

      # - name: SSH into the server and deploy Docker app
      #   run: |
      #     sshpass -p ${{ secrets.VM_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.VM_USERNAME }}@${{ secrets.VM_ADDRESS }} -p ${{ secrets.VM_PORT }} << EOF
          
      #     echo ✅ SSH connection successful

      #     # 1. Stop any running container with the name 'vmms-backend'
      #     running_containers=\$(docker ps -q --filter "name=vmms-backend")
      #     if [ -n "\$running_containers" ]; then
      #       echo ✅ Stopping and removing running containers named 'vmms-backend'
      #       docker stop \$running_containers
      #       docker rm \$running_containers
      #     else
      #       echo ✅ No running containers named 'vmms-backend' found
      #     fi

      #     # 2. Log in to GitHub Container Registry
      #     echo ✅ Logging in to GitHub Container Registry
      #     docker login --username GITHUBUSERNAME --password ${{ secrets.GH_PAT }} ghcr.io

      #     # 3. Pull the latest image from GitHub Container Registry
      #     echo ✅ Pulling the latest Docker image from GitHub Container Registry
      #     docker pull ghcr.io/dave-mash/vmms-backend:latest

      #     # 4. Run the latest Docker image
      #     echo ✅ Running the latest Docker container
      #     docker run -d --name vmms-backend -p 80:3000 -p 443:443 ghcr.io/dave-mash/vmms-backend:latest

      #     # 5. Clean up dangling images (optional)
      #     echo ✅ Cleaning up unused Docker images
      #     docker image prune -f

      #     echo ✅ Deployment successful

      #     exit
